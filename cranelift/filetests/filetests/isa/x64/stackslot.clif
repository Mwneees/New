test compile precise-output
target x86_64

function %f0() -> i64, i64, i64, i64 {
  ss0 = explicit_slot 8, align=16
  ss1 = explicit_slot 8, align=16
  ss2 = explicit_slot 4
  ss3 = explicit_slot 4

block0:
  v0 = stack_addr.i64 ss0
  v1 = stack_addr.i64 ss1
  v2 = stack_addr.i64 ss2
  v3 = stack_addr.i64 ss3
  return v0, v1, v2, v3
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
;   subq    %rsp, $48, %rsp
; block0:
;   lea     rsp(0 + virtual offset), %rax
;   lea     rsp(16 + virtual offset), %rdx
;   lea     rsp(32 + virtual offset), %r8
;   lea     rsp(40 + virtual offset), %r9
;   movq    %r8, 0(%rdi)
;   movq    %r9, 8(%rdi)
;   addq    %rsp, $48, %rsp
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
;   subq $0x30, %rsp
; block1: ; offset 0x8
;   leaq (%rsp), %rax
;   leaq 0x10(%rsp), %rdx
;   leaq 0x20(%rsp), %r8
;   leaq 0x28(%rsp), %r9
;   movq %r8, (%rdi)
;   movq %r9, 8(%rdi)
;   addq $0x30, %rsp
;   movq %rbp, %rsp
;   popq %rbp
;   retq

