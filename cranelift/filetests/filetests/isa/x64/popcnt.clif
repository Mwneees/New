test compile precise-output
target x86_64

function %popcnt64(i64) -> i64 {
block0(v0: i64):
    v1 = popcnt v0
    return v1
}

;   v129 := v147
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rcx
;   shrq    $1, %rcx, %rcx
;   movabsq $8608480567731124087, %r8
;   andq    %rcx, %r8, %rcx
;   subq    %rdi, %rcx, %rdi
;   shrq    $1, %rcx, %rcx
;   andq    %rcx, %r8, %rcx
;   subq    %rdi, %rcx, %rdi
;   shrq    $1, %rcx, %rcx
;   andq    %rcx, %r8, %rcx
;   subq    %rdi, %rcx, %rdi
;   movq    %rdi, %rax
;   shrq    $4, %rax, %rax
;   addq    %rax, %rdi, %rax
;   movabsq $1085102592571150095, %rcx
;   andq    %rax, %rcx, %rax
;   movabsq $72340172838076673, %r11
;   imulq   %rax, %r11, %rax
;   shrq    $56, %rax, %rax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %popcnt64load(i64) -> i64 {
block0(v0: i64):
    v1 = load.i64 v0
    v2 = popcnt v1
    return v2
}

;   v130 := v148
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    0(%rdi), %r8
;   movq    %r8, %r9
;   shrq    $1, %r9, %r9
;   movabsq $8608480567731124087, %r11
;   andq    %r9, %r11, %r9
;   subq    %r8, %r9, %r8
;   shrq    $1, %r9, %r9
;   andq    %r9, %r11, %r9
;   subq    %r8, %r9, %r8
;   shrq    $1, %r9, %r9
;   andq    %r9, %r11, %r9
;   subq    %r8, %r9, %r8
;   movq    %r8, %rax
;   shrq    $4, %rax, %rax
;   addq    %rax, %r8, %rax
;   movabsq $1085102592571150095, %r8
;   andq    %rax, %r8, %rax
;   movabsq $72340172838076673, %rdi
;   imulq   %rax, %rdi, %rax
;   shrq    $56, %rax, %rax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %popcnt32(i32) -> i32 {
block0(v0: i32):
    v1 = popcnt v0
    return v1
}

;   v129 := v145
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rcx
;   shrl    $1, %ecx, %ecx
;   movl    $2004318071, %r8d
;   andl    %ecx, %r8d, %ecx
;   subl    %edi, %ecx, %edi
;   shrl    $1, %ecx, %ecx
;   andl    %ecx, %r8d, %ecx
;   subl    %edi, %ecx, %edi
;   shrl    $1, %ecx, %ecx
;   andl    %ecx, %r8d, %ecx
;   subl    %edi, %ecx, %edi
;   movq    %rdi, %rax
;   shrl    $4, %eax, %eax
;   addl    %eax, %edi, %eax
;   andl    %eax, $252645135, %eax
;   imull   %eax, $16843009, %eax
;   shrl    $24, %eax, %eax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %popcnt32load(i64) -> i32 {
block0(v0: i64):
    v1 = load.i32 v0
    v2 = popcnt v1
    return v2
}

;   v130 := v146
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movl    0(%rdi), %r8d
;   movq    %r8, %r9
;   shrl    $1, %r9d, %r9d
;   movl    $2004318071, %r11d
;   andl    %r9d, %r11d, %r9d
;   subl    %r8d, %r9d, %r8d
;   shrl    $1, %r9d, %r9d
;   andl    %r9d, %r11d, %r9d
;   subl    %r8d, %r9d, %r8d
;   shrl    $1, %r9d, %r9d
;   andl    %r9d, %r11d, %r9d
;   subl    %r8d, %r9d, %r8d
;   movq    %r8, %rax
;   shrl    $4, %eax, %eax
;   addl    %eax, %r8d, %eax
;   andl    %eax, $252645135, %eax
;   imull   %eax, $16843009, %eax
;   shrl    $24, %eax, %eax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

