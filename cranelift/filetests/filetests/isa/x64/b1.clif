test compile
target x86_64 machinst

function %f0(b1, i32, i32) -> i32 {

block0(v0: b1, v1: i32, v2: i32):
    v3 = select.i32 v0, v1, v2
; check: testb   $$1, %dil
; nextln: cmovnzl %esi, %edx

    return v3
; nextln: movq    %rdx, %rax
; nextln: ret
}

function %f1(b1) -> i32 {

block0(v0: b1):
    brnz v0, block1
    jump block2
; check: testb   $$1, %dil
; nextln: jnz     label1; j label2

block1:
    v1 = iconst.i32 1
    return v1
; check:  movl    $$1, %eax
; nextln: ret

block2:
    v2 = iconst.i32 2
    return v2
; check:  movl    $$2, %eax
; nextln: ret
}

function %f2(b1) -> i32 {

block0(v0: b1):
    brz v0, block1
    jump block2
; check: testb   $$1, %dil
; nextln: jz      label1; j label2

block1:
    v1 = iconst.i32 1
    return v1
; check:  movl    $$1, %eax
; nextln: ret

block2:
    v2 = iconst.i32 2
    return v2
; check:  movl    $$2, %eax
; nextln: ret
}
