test compile precise-output
target x86_64

function %f(i32, i64 vmctx) -> i64 {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned gv0+0
    gv2 = load.i64 notrap aligned gv0+8
    heap0 = dynamic gv1, bound gv2, offset_guard 0x1000, index_type i32

block0(v0: i32, v1: i64):

    v2 = heap_addr.i64 heap0, v0, 0x8000
    return v2
}

;   v130 := v145
;   v133 := v144
;   v137 := v143
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movl    %edi, %eax
;   movq    8(%rsi), %r8
;   movq    %rax, %rcx
;   addq    %rcx, $32768, %rcx
;   jnb ; ud2 heap_oob ;
;   cmpq    %r8, %rcx
;   jbe     label1; j label2
; block1:
;   addq    %rax, 0(%rsi), %rax
;   xorq    %r9, %r9, %r9
;   cmpq    %r8, %rcx
;   cmovnbeq %r9, %rax, %rax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; block2:
;   ud2 heap_oob

