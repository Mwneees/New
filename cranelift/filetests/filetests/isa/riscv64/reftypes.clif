test compile precise-output
set unwind_info=false
target riscv64

function %f0(r64) -> r64 {
block0(v0: r64):
  return v0
}

; block0:
;   ret

function %f1(r64) -> b1 {
block0(v0: r64):
  v1 = is_null v0
  return v1
}

; block0:
;   is_null a0,a0
;   ret

function %f2(r64) -> b1 {
block0(v0: r64):
  v1 = is_invalid v0
  return v1
}

; block0:
;   is_invalid a0,a0
;   ret

function %f3() -> r64 {
block0:
  v0 = null.r64
  return v0
}

; block0:
;   li a0,0
;   ret

function %f4(r64, r64) -> r64, r64, r64 {
    fn0 = %f(r64) -> b1
    ss0 = explicit_slot 8

block0(v0: r64, v1: r64):
    v2 = call fn0(v0)
    stack_store.r64 v0, ss0
    brz v2, block1(v1, v0)
    jump block2(v0, v1)

block1(v3: r64, v4: r64):
    jump block3(v3, v4)

block2(v5: r64, v6: r64):
    jump block3(v5, v6)

block3(v7: r64, v8: r64):
    v9 = stack_load.r64 ss0
    return v7, v8, v9
}

;   add sp,-16
;   sd ra,0(sp)
;   sd fp,8(sp)
;   mv fp,sp
;   add sp,-48
;   sd s8,0(sp)
; block0:
;   sd a1,16(nominal_sp)
;   mv s8,a2
;   sd a0,8(nominal_sp)
;   load_sym a3,%f+0
;   callind a3
;   load_addr a5,0(nominal_sp)
;   ld t2,8(nominal_sp)
;   sd t2,0(a5)
;   beq a0,zero,taken(label1),not_taken(label3)
; block1:
;   j label2
; block2:
;   mv a1,t2
;   ld a0,16(nominal_sp)
;   j label5
; block3:
;   j label4
; block4:
;   mv a0,t2
;   ld a1,16(nominal_sp)
;   j label5
; block5:
;   load_addr a7,0(nominal_sp)
;   ld a7,0(a7)
;   mv a2,s8
;   sd a7,0(a2)
;   ld s8,0(sp)
;   add sp,+48
;   ld ra,0(sp)
;   ld fp,8(sp)
;   add sp,+16
;   ret

