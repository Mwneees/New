test compile precise-output
set unwind_info=false
target riscv64 has_zca has_zcd

function %c_fldsp() -> f64 {
  ss0 = explicit_slot 16

block0:
  v0 = stack_load.f64 ss0+8
  return v0
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
;   add sp,-16
; block0:
;   fld fa0,8(nominal_sp)
;   add sp,+16
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   c.addi16sp sp, -0x10
;   c.sdsp ra, 8(sp)
;   c.sdsp s0, 0(sp)
;   c.mv s0, sp
;   c.addi16sp sp, -0x10
; block1: ; offset 0xa
;   c.fldsp fa0, 8(sp)
;   c.addi16sp sp, 0x10
;   c.ldsp ra, 8(sp)
;   c.ldsp s0, 0(sp)
;   c.addi16sp sp, 0x10
;   c.jr ra

function %c_fsdsp(f64) {
  ss0 = explicit_slot 128

block0(v0: f64):
  stack_store.f64 v0, ss0+64
  return
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
;   add sp,-128
; block0:
;   fsd fa0,64(nominal_sp)
;   add sp,+128
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   c.addi16sp sp, -0x10
;   c.sdsp ra, 8(sp)
;   c.sdsp s0, 0(sp)
;   c.mv s0, sp
;   c.addi16sp sp, -0x80
; block1: ; offset 0xa
;   c.fsdsp fa0, 0x40(sp)
;   c.addi16sp sp, 0x80
;   c.ldsp ra, 8(sp)
;   c.ldsp s0, 0(sp)
;   c.addi16sp sp, 0x10
;   c.jr ra

