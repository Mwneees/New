test optimize
set opt_level=speed
set use_egraphs=true
target x86_64

function %f(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
    jump block1(v0)

block1(v2: i32):
    v3 = iconst.i32 1
    v4 = iadd.i32 v1, v3
    v5 = iconst.i32 40
    v6 = icmp eq v2, v5
    v7 = iconst.i32 1
    v8 = iadd.i32 v2, v7
    brif v6, block2(v4), block1(v8)

block2(v9: i32):
    return v9
}

; check:  block0(v0: i32, v1: i32):
; nextln:     jump block1(v0)

; check:  block1(v2: i32):
;; constants are not lifted; they are rematerialized in each block where used
; check:      v5 = iconst.i32 40
; check:      v6 = icmp eq v2, v5
; check:      v3 = iconst.i32 1
; check:      v8 = iadd v2, v3
; check:      brif v6, block2, block1(v8)


; check:  block2:
; check:      v10 = iconst.i32 1
; check:      v4 = iadd.i32 v1, v10
; check:      return v4

function %f(i64x2, i32) -> i64x2 {
block0(v0: i64x2, v1: i32):
    jump block1(v0, v1)

block1(v2: i64x2, v3: i32):
    v4 = vconst.i64x2 0x1000000010000000
    v5 = iadd v2, v4
    v6 = iconst.i32 1
    v7 = isub v3, v6
    brif v7, block1(v5, v7), block2(v5)

block2(v8: i64x2):
    return v8
}

; check:  block0(v0: i64x2, v1: i32):
; nextln:     v4 = vconst.i64x2 const0
; nextln:     jump block1(v0, v1)
; check:  block1(v2: i64x2, v3: i32):
; check:      v6 = iconst.i32 1
; check:      v7 = isub v3, v6
; check:      v5 = iadd v2, v4
; check:      v8 -> v5
; check:      brif v7, block1(v5, v7), block2
; check:  block2:
; check:      return v5
