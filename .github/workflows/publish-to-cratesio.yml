# The purpose of this workflow is to publish the wasmtime workspace of crates
# whenever a wasmtime tag is created. This baiscally boils down to running
# `scripts/publish.rs` at the right time.

name: "Publish to crates.io"

on:
  push:
    tags:
    - 'v*'

jobs:
  publish:
    if: github.repository == 'bytecodealliance/wasmtime'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - run: rustup update stable && rustup default stable
    - run: |
        rustc scripts/publish.rs
        ./publish publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - run: |
        # Download the published versions of the adapters
        wget https://github.com/bytecodealliance/wasmtime/releases/download/${{github.event.release.tag_name}}/wasi_snapshot_preview1.command.wasm -O crates/wasi-preview1-component-adapter/provider/artefacts/wasi_snapshot_preview1.command.wasm
        wget https://github.com/bytecodealliance/wasmtime/releases/download/${{github.event.release.tag_name}}/wasi_snapshot_preview1.reactor.wasm -O crates/wasi-preview1-component-adapter/provider/artefacts/wasi_snapshot_preview1.reactor.wasm
        wget https://github.com/bytecodealliance/wasmtime/releases/download/${{github.event.release.tag_name}}/wasi_snapshot_preview1.proxy.wasm -O crates/wasi-preview1-component-adapter/provider/artefacts/wasi_snapshot_preview1.proxy.wasm

        # Materialise the adapter provider crate inside the workspace
        cp crates/wasi-preview1-component-adapter/provider/Cargo.toml.in crates/wasi-preview1-component-adapter/provider/Cargo.toml
        sed -i '/"crates\/wasi-preview1-component-adapter",/a\ \ "crates\/wasi-preview1-component-adapter\/provider",' Cargo.toml

        cargo publish -p wasi-preview1-component-adapter-provider --allow-dirty
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
